
model {
  # Priors
  omega ~ dunif(0, 1)        # Inclusion probability
  p ~ dunif(0, 1)            # Capture probability
  
  # Latent state (z=1 if individual is in population, 0 otherwise)
  for (i in 1:M) {
    z[i] ~ dbern(omega)      # Inclusion indicator
    
    # Observation process - each occasion is a Bernoulli trial
    for (t in 1:n_occasions) {
      # Can only be captured if in population (z[i]=1)
      # The probability is p (capture probability) * z[i] (inclusion indicator)
      y[i,t] ~ dbern(p * z[i])
      
      # Generate replicate data for posterior predictive check
      y_sim[i,t] ~ dbern(p * z[i])
    }
  }
  
  # Derived parameters
  N <- sum(z[])               # Population size
  
  # Posterior predictive check statistics
  for (t in 1:n_occasions) {
    # Observed and simulated counts for each occasion
    n_obs[t] <- sum(y[1:M,t])
    n_sim[t] <- sum(y_sim[1:M,t])
  }
}
